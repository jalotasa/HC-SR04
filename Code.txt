{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // This #include statement was automatically added by the Particle IDE.\
#include <ThingSpeak.h>\
\
// This #include statement was automatically added by the Particle IDE.\
#include <HC_SR04.h>\
\
\
TCPClient client;\
\
double distance = 0.0;\
double inches = 0.0;\
\
int trigPin = A0;\
int echoPin = D0;\
unsigned long myChannelNumber = 1036363;\
const char * myWriteAPIKey = "EAYDYTYRZY891C1P";\
\
/*\
Connect an HC-SR04 Range finder as follows:\
Spark   HC-SR04\
GND     GND\
5V      VCC\
D4      Trig\
D5      Voltage divider output - see below\
\
Echo --|\
       >\
       < 470 ohm resistor\
       >\
       ------ D5 on Spark\
       >\
       < 470 ohm resistor\
       >\
GND ---|\
//saium\
Test it using curl like this:\
curl https://api.spark.io/v1/devices/<deviceid>/cm?access_token=<accesstoken>\
\
The default usable rangefinder is 10cm to 250cm. Outside of that range -1 is returned as the distance.\
\
You can change this range by supplying two extra parameters to the constructor of minCM and maxCM, like this:\
\
HC_SR04 rangefinder = HC_SR04(trigPin, echoPin, 5.0, 300.0);\
\
*/\
\
HC_SR04 rangefinder = HC_SR04(trigPin, echoPin);\
\
void setup() \
\{ \
    ThingSpeak.begin(client);\
    Spark.variable("distance", &distance, DOUBLE);\
    Spark.variable("inches", &inches, DOUBLE);\
\}\
\
void loop() \
\{\
    distance = rangefinder.getDistanceCM();\
    inches = rangefinder.getDistanceInch();\
    Particle.publish("distance - ",String(distance));\
    ThingSpeak.setField(1,String(distance));\
    delay(30000);\
    ThingSpeak.writeFields(myChannelNumber, myWriteAPIKey);\
\
\
\}\
\
\
\
\
}